// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WorkShop4.Models;

namespace WorkShop4.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210620010210_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("WorkShop4.Models.Client", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("lastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("website")
                        .HasColumnType("text")
                        .HasColumnName("website");

                    b.HasKey("id")
                        .HasName("pk_clients");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("WorkShop4.Models.Order", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("clientId")
                        .HasColumnType("bigint")
                        .HasColumnName("client_id");

                    b.Property<List<long>>("productsId")
                        .HasColumnType("bigint[]")
                        .HasColumnName("products_id");

                    b.HasKey("id")
                        .HasName("pk_orders");

                    b.HasIndex("clientId")
                        .HasDatabaseName("ix_orders_client_id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("WorkShop4.Models.Product", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("Orderid")
                        .HasColumnType("bigint")
                        .HasColumnName("orderid");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<double>("price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<int>("quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("id")
                        .HasName("pk_products");

                    b.HasIndex("Orderid")
                        .HasDatabaseName("ix_products_orderid");

                    b.ToTable("products");
                });

            modelBuilder.Entity("WorkShop4.Models.Order", b =>
                {
                    b.HasOne("WorkShop4.Models.Client", "client")
                        .WithMany()
                        .HasForeignKey("clientId")
                        .HasConstraintName("fk_orders_clients_client_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client");
                });

            modelBuilder.Entity("WorkShop4.Models.Product", b =>
                {
                    b.HasOne("WorkShop4.Models.Order", null)
                        .WithMany("products")
                        .HasForeignKey("Orderid")
                        .HasConstraintName("fk_products_orders_orderid");
                });

            modelBuilder.Entity("WorkShop4.Models.Order", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
